{
	"info": {
		"_postman_id": "d64cc2f8-04eb-45c1-84d8-91c91d554498",
		"name": "Endorav2",
		"description": "Complete collection of all endpoints for the Spring Two DataSource application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35058659",
		"_collection_link": "https://dev-smos.postman.co/workspace/NestJs~60d57991-6416-45fe-85e1-5888dd088eb0/collection/35058659-d64cc2f8-04eb-45c1-84d8-91c91d554498?action=share&source=collection_link&creator=35058659"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"testuser@example.com\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"password\": \"password123\",\n  \"confirmedPassword\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Email",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/verify/{{userUuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"verify",
								"{{userUuid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get Current User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"displayName\": \"Updated Display Name\",\n  \"profileImage\": \"https://example.com/image.jpg\",\n  \"preferences\": \"dark-theme\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userUuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userUuid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Project Management",
			"item": [
				{
					"name": "Create Project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectName\": \"My New Project\",\n  \"description\": \"Project description\",\n  \"userUuid\": \"{{userUuid}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Projects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Project by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/{{projectId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Project by UUID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/uuid/{{projectUuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"uuid",
								"{{projectUuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Projects by User UUID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/user/{{userUuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"user",
								"{{userUuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Project with User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/{{projectId}}/with-user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"with-user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/{{projectId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Table Management",
			"item": [
				{
					"name": "Table With Relation",
					"item": [
						{
							"name": "Create Table with Relationships",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userUuid\": \"{{userUuid}}\",\n  \"projectUuid\": \"{{projectUuid}}\",\n  \"schemaName\": \"orders\",\n  \"schema\": {\n    \"customer_id\": \"String\",\n    \"product_id\": \"String\",\n    \"quantity\": \"Integer\",\n    \"total_amount\": \"Double\",\n    \"order_date\": \"String\",\n    \"status\": \"String\"\n  },\n  \"relationships\": [\n    {\n      \"foreignKeyColumn\": \"customer_id\",\n      \"referencedTable\": \"customers\",\n      \"referencedColumn\": \"id\",\n      \"onDelete\": \"CASCADE\",\n      \"onUpdate\": \"CASCADE\"\n    },\n    {\n      \"foreignKeyColumn\": \"product_id\",\n      \"referencedTable\": \"products\",\n      \"referencedColumn\": \"id\",\n      \"onDelete\": \"RESTRICT\",\n      \"onUpdate\": \"CASCADE\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/table/with-relationships",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"table",
										"with-relationships"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Table Relationships",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/relationships",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"table",
										"{{schemaName}}",
										"project",
										"{{projectUuid}}",
										"relationships"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Relationship to Existing Table",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignKeyColumn\": \"category_id\",\n  \"referencedTable\": \"categories\",\n  \"referencedColumn\": \"id\",\n  \"onDelete\": \"SET NULL\",\n  \"onUpdate\": \"CASCADE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/relationships",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"table",
										"{{schemaName}}",
										"project",
										"{{projectUuid}}",
										"relationships"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Relationship from Table",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/relationships/{{foreignKeyColumn}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"table",
										"{{schemaName}}",
										"project",
										"{{projectUuid}}",
										"relationships",
										"{{foreignKeyColumn}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Record with All Relations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/record/{{recordId}}/with-relations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"table",
										"{{schemaName}}",
										"project",
										"{{projectUuid}}",
										"record",
										"{{recordId}}",
										"with-relations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Records with Joins",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\"customers\", \"products\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/records-with-joins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"table",
										"{{schemaName}}",
										"project",
										"{{projectUuid}}",
										"records-with-joins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Related Tables",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/related-tables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"table",
										"{{schemaName}}",
										"project",
										"{{projectUuid}}",
										"related-tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Relationship Integrity",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/validate-integrity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"table",
										"{{schemaName}}",
										"project",
										"{{projectUuid}}",
										"validate-integrity"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Table",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userUuid\": \"{{userUuid}}\",\n  \"projectUuid\": \"{{projectUuid}}\",\n  \"schemaName\": \"users\",\n  \"schema\": {\n    \"name\": \" VARCHAR(255)\",\n    \"email\": \" VARCHAR(255)\",\n    \"age\": \"INT\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/table",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Tables",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/table",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tables by Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/table/project/{{projectUuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table",
								"project",
								"{{projectUuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Table by Name and Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table",
								"{{schemaName}}",
								"project",
								"{{projectUuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert Data with Path Params",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"age\": 30,\n  \"isActive\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/user/{{userUuid}}/data",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table",
								"{{schemaName}}",
								"project",
								"{{projectUuid}}",
								"user",
								"{{userUuid}}",
								"data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert Data with Body",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userUuid\": \"{{userUuid}}\",\n  \"projectUuid\": \"{{projectUuid}}\",\n  \"schemaName\": \"{{schemaName}}\",\n  \"data\": {\n    \"name\": \"Jane Doe\",\n    \"email\": \"jane@example.com\",\n    \"age\": 25,\n    \"isActive\": true\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/table/data",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table",
								"data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Data from Table",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/data",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table",
								"{{schemaName}}",
								"data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Table Data by Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/data/project/{{projectUuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table",
								"{{schemaName}}",
								"data",
								"project",
								"{{projectUuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Record by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/{{recordId}}/project/{{projectUuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table",
								"{{schemaName}}",
								"{{recordId}}",
								"project",
								"{{projectUuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Record by ID",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Name\",\n  \"email\": \"updated@example.com\",\n  \"age\": 35,\n  \"isActive\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/{{recordId}}/project/{{projectUuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table",
								"{{schemaName}}",
								"{{recordId}}",
								"project",
								"{{projectUuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Record by ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/{{recordId}}/project/{{projectUuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table",
								"{{schemaName}}",
								"{{recordId}}",
								"project",
								"{{projectUuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Related Tables",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/relationships/project/{{projectUuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table",
								"{{schemaName}}",
								"relationships",
								"project",
								"{{projectUuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Table Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/docs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table",
								"{{schemaName}}",
								"docs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/table/docs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table",
								"docs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Record with Relations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/{{recordId}}/with-relations/project/{{projectUuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"table",
								"{{schemaName}}",
								"{{recordId}}",
								"with-relations",
								"project",
								"{{projectUuid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dynamic Table API",
			"item": [
				{
					"name": "Get All Records from Table",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tables/{{schemaName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tables",
								"{{schemaName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Record in Table",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectId\": \"{{projectUuid}}\",\n  \"name\": \"Dynamic Record\",\n  \"email\": \"dynamic@example.com\",\n  \"age\": 28,\n  \"isActive\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/tables/{{schemaName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tables",
								"{{schemaName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Record by ID (Dynamic)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tables/{{schemaName}}/{{recordId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tables",
								"{{schemaName}}",
								"{{recordId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Record by ID (Dynamic)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Dynamic Record\",\n  \"email\": \"updated.dynamic@example.com\",\n  \"age\": 32,\n  \"isActive\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/tables/{{schemaName}}/{{recordId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tables",
								"{{schemaName}}",
								"{{recordId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Record by ID (Dynamic)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tables/{{schemaName}}/{{recordId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tables",
								"{{schemaName}}",
								"{{recordId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dynamic Endpoints",
			"item": [
				{
					"name": "Get All Endpoint Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/endpoints/docs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"endpoints",
								"docs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Endpoint Documentation for Table",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/endpoints/docs/{{schemaName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"endpoints",
								"docs",
								"{{schemaName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate Endpoints for Table",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/endpoints/generate/{{schemaName}}/project/{{projectUuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"endpoints",
								"generate",
								"{{schemaName}}",
								"project",
								"{{projectUuid}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "projectUuid",
			"value": "your-project-uuid",
			"type": "string"
		},
		{
			"key": "userUuid",
			"value": "your-user-uuid",
			"type": "string"
		},
		{
			"key": "schemaName",
			"value": "your-schema-name",
			"type": "string"
		},
		{
			"key": "recordId",
			"value": "your-record-id",
			"type": "string"
		}
	]
}