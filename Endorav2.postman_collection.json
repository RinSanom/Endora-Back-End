{
	"info": {
		"_postman_id": "d3fcefe1-4cbd-4aa5-b75a-90e19e7c0989",
		"name": "Endorav2 - Token-Based Security",
		"description": "Complete collection of all endpoints for the Spring Two DataSource application with token-based security system",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35058659",
		"_collection_link": "https://dev-smos.postman.co/workspace/NestJs~60d57991-6416-45fe-85e1-5888dd088eb0/collection/35058659-d3fcefe1-4cbd-4aa5-b75a-90e19e7c0989?action=share&source=collection_link&creator=35058659"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"testuser@example.com\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"password\": \"password123\",\n  \"confirmedPassword\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.accessToken);",
									"    pm.environment.set(\"refreshToken\", jsonData.refreshToken);",
									"    pm.environment.set(\"keycloakUserId\", jsonData.userId);",
									"    pm.environment.set(\"username\", jsonData.username);",
									"    pm.environment.set(\"email\", jsonData.email);",
									"    console.log(\"Tokens and user info saved to environment variables\");",
									"    console.log(\"Keycloak User ID: \" + jsonData.userId);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"usernameOrEmail\": \"rinsanom3@gmail.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "login"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Debug & Testing",
			"item": [
				{
					"name": "Get Token Info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/debug/token-info",
							"host": ["{{baseUrl}}"],
							"path": ["api", "debug", "token-info"]
						}
					},
					"response": []
				},
				{
					"name": "Test User Role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/debug/test-user-role",
							"host": ["{{baseUrl}}"],
							"path": ["api", "debug", "test-user-role"]
						}
					},
					"response": []
				},
				{
					"name": "Test Admin Role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/debug/test-admin-role",
							"host": ["{{baseUrl}}"],
							"path": ["api", "debug", "test-admin-role"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get Current User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/profile",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", "profile"]
						}
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"displayName\": \"Updated Display Name\",\n  \"profileImage\": \"https://example.com/image.jpg\",\n  \"preferences\": \"dark-theme\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/profile",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", "profile"]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"]
						}
					},
					"response": []
				},
				{
					"name": "Delete User (Admin)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{keycloakUserId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", "{{keycloakUserId}}"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Project Management",
			"item": [
				{
					"name": "Create Project (Token-Based)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"projectUuid\", jsonData.projectUuid);",
									"    console.log(\"Project UUID saved: \" + jsonData.projectUuid);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectName\": \"My Token-Based Project\",\n  \"description\": \"Project created using token-based authentication\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": ["{{baseUrl}}"],
							"path": ["projects"]
						}
					},
					"response": []
				},
				{
					"name": "Get My Projects (Token-Based)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/my-projects",
							"host": ["{{baseUrl}}"],
							"path": ["projects", "my-projects"]
						}
					},
					"response": []
				},
				{
					"name": "Get All Projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": ["{{baseUrl}}"],
							"path": ["projects"]
						}
					},
					"response": []
				},
				{
					"name": "Get Project by UUID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/uuid/{{projectUuid}}",
							"host": ["{{baseUrl}}"],
							"path": ["projects", "uuid", "{{projectUuid}}"]
						}
					},
					"response": []
				},
				{
					"name": "Get Projects by User UUID (Validated)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/user/{{userUuid}}",
							"host": ["{{baseUrl}}"],
							"path": ["projects", "user", "{{userUuid}}"]
						}
					},
					"response": []
				},
				{
					"name": "Delete Project",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/{{projectId}}",
							"host": ["{{baseUrl}}"],
							"path": ["projects", "{{projectId}}"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Table Management",
			"item": [
				{
					"name": "Create Table (Token-Based)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"schemaName\", jsonData.schemaName);",
									"    console.log(\"Table created: \" + jsonData.schemaName);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectUuid\": \"{{projectUuid}}\",\n  \"schemaName\": \"users\",\n  \"schema\": {\n    \"name\": \"VARCHAR(255)\",\n    \"email\": \"VARCHAR(255)\",\n    \"age\": \"Integer\",\n    \"created_at\": \"VARCHAR(255)\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/table",
							"host": ["{{baseUrl}}"],
							"path": ["table"]
						}
					},
					"response": []
				},
				{
					"name": "Create Table with Relationships (Token-Based)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectUuid\": \"{{projectUuid}}\",\n  \"schemaName\": \"orders\",\n  \"schema\": {\n    \"customer_id\": \"VARCHAR(255)\",\n    \"product_id\": \"VARCHAR(255)\",\n    \"quantity\": \"Integer\",\n    \"total_amount\": \"Double\",\n    \"order_date\": \"VARCHAR(255)\"\n  },\n  \"relationships\": [\n    {\n      \"foreignKeyColumn\": \"customer_id\",\n      \"referencedTable\": \"users\",\n      \"referencedColumn\": \"id\",\n      \"onDelete\": \"CASCADE\",\n      \"onUpdate\": \"CASCADE\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/table/with-relationships",
							"host": ["{{baseUrl}}"],
							"path": ["table", "with-relationships"]
						}
					},
					"response": []
				},
				{
					"name": "Insert Data (Current User)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"age\": 30,\n  \"created_at\": \"2024-01-01\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/data",
							"host": ["{{baseUrl}}"],
							"path": ["table", "{{schemaName}}", "project", "{{projectUuid}}", "data"]
						}
					},
					"response": []
				},
				{
					"name": "Insert Data via Request Body (Token-Based)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"schemaName\": \"{{schemaName}}\",\n  \"projectUuid\": \"{{projectUuid}}\",\n  \"data\": {\n    \"name\": \"Jane Smith\",\n    \"email\": \"jane@example.com\",\n    \"age\": 25,\n    \"created_at\": \"2024-01-02\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/table/data",
							"host": ["{{baseUrl}}"],
							"path": ["table", "data"]
						}
					},
					"response": []
				},
				{
					"name": "Get All Tables",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/table",
							"host": ["{{baseUrl}}"],
							"path": ["table"]
						}
					},
					"response": []
				},
				{
					"name": "Get Tables by Project",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/table/project/{{projectUuid}}",
							"host": ["{{baseUrl}}"],
							"path": ["table", "project", "{{projectUuid}}"]
						}
					},
					"response": []
				},
				{
					"name": "Get Table Data by Project",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/data/project/{{projectUuid}}",
							"host": ["{{baseUrl}}"],
							"path": ["table", "{{schemaName}}", "data", "project", "{{projectUuid}}"]
						}
					},
					"response": []
				},
				{
					"name": "Get Record by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/{{recordId}}/project/{{projectUuid}}",
							"host": ["{{baseUrl}}"],
							"path": ["table", "{{schemaName}}", "{{recordId}}", "project", "{{projectUuid}}"]
						}
					},
					"response": []
				},
				{
					"name": "Update Record by ID",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Name\",\n  \"email\": \"updated@example.com\",\n  \"age\": 35\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/{{recordId}}/project/{{projectUuid}}",
							"host": ["{{baseUrl}}"],
							"path": ["table", "{{schemaName}}", "{{recordId}}", "project", "{{projectUuid}}"]
						}
					},
					"response": []
				},
				{
					"name": "Delete Record by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/{{recordId}}/project/{{projectUuid}}",
							"host": ["{{baseUrl}}"],
							"path": ["table", "{{schemaName}}", "{{recordId}}", "project", "{{projectUuid}}"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Table Relationships",
			"item": [
				{
					"name": "Get Table Relationships",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/relationships",
							"host": ["{{baseUrl}}"],
							"path": ["table", "{{schemaName}}", "project", "{{projectUuid}}", "relationships"]
						}
					},
					"response": []
				},
				{
					"name": "Add Relationship to Table",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"foreignKeyColumn\": \"customer_id\",\n  \"referencedTable\": \"users\",\n  \"referencedColumn\": \"id\",\n  \"onDelete\": \"CASCADE\",\n  \"onUpdate\": \"CASCADE\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/relationships",
							"host": ["{{baseUrl}}"],
							"path": ["table", "{{schemaName}}", "project", "{{projectUuid}}", "relationships"]
						}
					},
					"response": []
				},
				{
					"name": "Remove Relationship from Table",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/relationships/{{foreignKeyColumn}}",
							"host": ["{{baseUrl}}"],
							"path": ["table", "{{schemaName}}", "project", "{{projectUuid}}", "relationships", "{{foreignKeyColumn}}"]
						}
					},
					"response": []
				},
				{
					"name": "Get Records with Joins",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"users\", \"orders\"]"
						},
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/records-with-joins",
							"host": ["{{baseUrl}}"],
							"path": ["table", "{{schemaName}}", "project", "{{projectUuid}}", "records-with-joins"]
						}
					},
					"response": []
				},
				{
					"name": "Get Record with Relations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/record/{{recordId}}/with-relations",
							"host": ["{{baseUrl}}"],
							"path": ["table", "{{schemaName}}", "project", "{{projectUuid}}", "record", "{{recordId}}", "with-relations"]
						}
					},
					"response": []
				},
				{
					"name": "Get Related Tables",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/related-tables",
							"host": ["{{baseUrl}}"],
							"path": ["table", "{{schemaName}}", "project", "{{projectUuid}}", "related-tables"]
						}
					},
					"response": []
				},
				{
					"name": "Validate Relationship Integrity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/table/{{schemaName}}/project/{{projectUuid}}/validate-integrity",
							"host": ["{{baseUrl}}"],
							"path": ["table", "{{schemaName}}", "project", "{{projectUuid}}", "validate-integrity"]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-refresh token if needed",
					"const authToken = pm.environment.get('authToken');",
					"if (!authToken) {",
					"    console.log('No auth token found. Please login first.');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script",
					"if (pm.response.code === 401) {",
					"    console.log('Unauthorized. Please check your token.');",
					"}",
					"if (pm.response.code === 403) {",
					"    console.log('Forbidden. You may not have the required permissions.');",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "keycloakUserId",
			"value": "",
			"type": "string"
		},
		{
			"key": "username",
			"value": "",
			"type": "string"
		},
		{
			"key": "email",
			"value": "",
			"type": "string"
		},
		{
			"key": "projectUuid",
			"value": "",
			"type": "string"
		},
		{
			"key": "schemaName",
			"value": "",
			"type": "string"
		},
		{
			"key": "recordId",
			"value": "",
			"type": "string"
		},
		{
			"key": "foreignKeyColumn",
			"value": "",
			"type": "string"
		}
	]
}